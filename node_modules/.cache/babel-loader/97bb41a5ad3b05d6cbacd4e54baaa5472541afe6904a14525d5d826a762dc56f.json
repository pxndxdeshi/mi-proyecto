{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pxpxd\\\\mi-proyecto\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem';\n\n// El nombre de la función debe coincidir con la importación en index.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  // Lógica para agregar tarea\n  const handleAddTask = () => {\n    if (task.trim() !== '') {\n      setTasks([...tasks, task.trim()]);\n      setTask('');\n    }\n  };\n\n  // Lógica para eliminar tarea\n  const handleDeleteTask = index => {\n    // Filtra el array, manteniendo solo los elementos que NO están en el índice a eliminar\n    const newTasks = tasks.filter((t, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      border: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u2705 To-Do List FUNCIONAL \\u2705\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      placeholder: \"Nueva tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((t, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: t,\n        index: index,\n        onDelete: handleDeleteTask // Pasa la función como Prop\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// Exportación por defecto obligatoria\n_s(App, \"5mGQg7guAs5rSlbJvLoFnwVpbYU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskItem","jsxDEV","_jsxDEV","App","_s","task","setTask","tasks","setTasks","handleAddTask","trim","handleDeleteTask","index","newTasks","filter","t","i","style","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Pxpxd/mi-proyecto/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\n// El nombre de la función debe coincidir con la importación en index.js\r\nfunction App() {\r\n  const [task, setTask] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Lógica para agregar tarea\r\n  const handleAddTask = () => {\r\n    if (task.trim() !== '') {\r\n      setTasks([...tasks, task.trim()]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  // Lógica para eliminar tarea\r\n  const handleDeleteTask = (index) => {\r\n    // Filtra el array, manteniendo solo los elementos que NO están en el índice a eliminar\r\n    const newTasks = tasks.filter((t, i) => i !== index);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, border: '1px solid #ccc' }}>\r\n      <h1>✅ To-Do List FUNCIONAL ✅</h1> \r\n      \r\n      {/* Input y Botón de Agregar */}\r\n      <input\r\n        type=\"text\"\r\n        value={task}\r\n        onChange={(e) => setTask(e.target.value)}\r\n        placeholder=\"Nueva tarea\"\r\n      />\r\n      <button onClick={handleAddTask}>Agregar</button>\r\n      \r\n      {/* Renderizado de la lista */}\r\n      <ul>\r\n        {tasks.map((t, index) => (\r\n          <TaskItem \r\n            key={index}            \r\n            task={t}               \r\n            index={index}          \r\n            onDelete={handleDeleteTask} // Pasa la función como Prop\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Exportación por defecto obligatoria\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,IAAI,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEF,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;MACjCJ,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClC;IACA,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACpDJ,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAC,QAAA,gBACpDlB,OAAA;MAAAkB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjCtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,IAAK;MACZsB,QAAQ,EAAGC,CAAC,IAAKtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC;IAAa;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAEtB,aAAc;MAAAW,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGhDtB,OAAA;MAAAkB,QAAA,EACGb,KAAK,CAACyB,GAAG,CAAC,CAACjB,CAAC,EAAEH,KAAK,kBAClBV,OAAA,CAACF,QAAQ;QAEPK,IAAI,EAAEU,CAAE;QACRH,KAAK,EAAEA,KAAM;QACbqB,QAAQ,EAAEtB,gBAAiB,CAAC;MAAA,GAHvBC,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;;AAEA;AAAApB,EAAA,CA/CSD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}